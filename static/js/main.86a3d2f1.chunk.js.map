{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","e","id","type","onClick","string","charAt","toUpperCase","slice","Section","title","children","Notification","message","App","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","objKey","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAuBeA,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,qCACI,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,mDAAsBC,EAAtB,YCJZ,IAkBeC,EAlBS,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACjC,OACE,8BACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBAEEC,GAAID,EACJE,KAAK,SACLC,QAAS,kBAAML,EAAgBE,IAJjC,UAPuBI,EAWqCJ,EAVzDI,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,KAO1CP,GARf,IAA+BI,QCYhBI,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,qCACI,6BAAKD,IACJC,MCQEC,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,mCACI,4BAAIA,OCyDDC,E,4MArDbC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPK,gBAAkB,SAACE,GACjB,EAAKe,UAAS,SAACC,GAAD,sBACXhB,EAAIgB,EAAUhB,GAAK,O,EAIxBiB,mBAAqB,WACnB,OAAO,EAAKH,MAAMrB,IAAM,EAAKqB,MAAMvB,KAAO,EAAKuB,MAAMtB,S,EAGvD0B,gCAAkC,WAChC,IAAMxB,EAAQ,EAAKuB,qBACnB,OAAc,IAAVvB,EACK,EAEFyB,KAAKC,MAAO,EAAKN,MAAMvB,KAAOG,EAAS,M,4CAGhD,WACE,MAA+B2B,KAAKP,MAA5BvB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQ2B,KAAKJ,qBACbtB,EAAqB0B,KAAKH,kCAE1BI,EAASC,OAAOC,KAAKH,KAAKP,OAChC,OACE,qCACE,cAAC,EAAD,CAASL,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBZ,QAASyB,EAAQxB,gBAAiBuB,KAAKvB,oBAG/C,IAAVJ,EACC,cAAC,EAAD,CAAckB,QAAQ,sBAEtB,cAAC,EAAD,CAASH,MAAM,aAAf,SACE,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GA7ChB8B,aCJlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.86a3d2f1.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <>\r\n            <p>Good:{good}</p>\r\n            <p>Neutral:{neutral}</p>\r\n            <p>Bad:{bad}</p>\r\n            <p>Total:{total}</p>\r\n            <p>Positive feedback:{positivePercentage} %</p>\r\n        </>\r\n    )\r\n};\r\n\r\nStatistics.propTypes = {\r\n\tgood: PropTypes.number.isRequired,\r\n\tneutral: PropTypes.number.isRequired,\r\n\tbad: PropTypes.number.isRequired,\r\n\ttotal: PropTypes.number.isRequired,\r\n\tpositivePercentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\nconst FeedbackOptions = ({options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map((e) => (\r\n        <button\r\n          key={e}\r\n          id={e}\r\n          type='button'\r\n          onClick={() => onLeaveFeedback(e)}>{capitalizeFirstLetter(e)}\r\n        </button>\r\n      ))}\r\n  </div>\r\n)\r\n}\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </>\r\n    )\r\n};\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <>\r\n            <p>{message}</p>\r\n        </>\r\n    )\r\n};\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Notification;","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\n\n\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  onLeaveFeedback = (e) => {\n    this.setState((prevState) => ({\n      [e]: prevState[e] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.bad + this.state.good + this.state.neutral;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    if (total === 0) {\n      return 0;\n    }\n    return Math.floor((this.state.good / total) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    const objKey = Object.keys(this.state);\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={objKey} onLeaveFeedback={this.onLeaveFeedback} />\n        </Section>\n\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          </Section>\n        )}\n      </>\n    );\n  }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}